export const Syntax = {
    AssignmentExpression: 'AssignmentExpression',
    AssignmentPattern: 'AssignmentPattern',
    ArrayExpression: 'ArrayExpression',
    ArrayPattern: 'ArrayPattern',
    ArrowFunctionExpression: 'ArrowFunctionExpression',
    AwaitExpression: 'AwaitExpression',
    BlockStatement: 'BlockStatement',
    BinaryExpression: 'BinaryExpression',
    BreakStatement: 'BreakStatement',
    CallExpression: 'CallExpression',
    CatchClause: 'CatchClause',
    ClassBody: 'ClassBody',
    ClassDeclaration: 'ClassDeclaration',
    ClassExpression: 'ClassExpression',
    ConditionalExpression: 'ConditionalExpression',
    ContinueStatement: 'ContinueStatement',
    DoWhileStatement: 'DoWhileStatement',
    DebuggerStatement: 'DebuggerStatement',
    EmptyStatement: 'EmptyStatement',
    ExportAllDeclaration: 'ExportAllDeclaration',
    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
    ExportNamedDeclaration: 'ExportNamedDeclaration',
    ExportSpecifier: 'ExportSpecifier',
    ExpressionStatement: 'ExpressionStatement',
    ForStatement: 'ForStatement',
    ForOfStatement: 'ForOfStatement',
    ForInStatement: 'ForInStatement',
    FunctionDeclaration: 'FunctionDeclaration',
    FunctionExpression: 'FunctionExpression',
    Identifier: 'Identifier',
    IfStatement: 'IfStatement',
    Import: 'Import',
    ImportDeclaration: 'ImportDeclaration',
    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
    ImportSpecifier: 'ImportSpecifier',
    Literal: 'Literal',
    LabeledStatement: 'LabeledStatement',
    LogicalExpression: 'LogicalExpression',
    MemberExpression: 'MemberExpression',
    MetaProperty: 'MetaProperty',
    MethodDefinition: 'MethodDefinition',
    NewExpression: 'NewExpression',
    ObjectExpression: 'ObjectExpression',
    ObjectPattern: 'ObjectPattern',
    Program: 'Program',
    Property: 'Property',
    RestElement: 'RestElement',
    ReturnStatement: 'ReturnStatement',
    SequenceExpression: 'SequenceExpression',
    SpreadElement: 'SpreadElement',
    Super: 'Super',
    SwitchCase: 'SwitchCase',
    SwitchStatement: 'SwitchStatement',
    TaggedTemplateExpression: 'TaggedTemplateExpression',
    TemplateElement: 'TemplateElement',
    TemplateLiteral: 'TemplateLiteral',
    ThisExpression: 'ThisExpression',
    ThrowStatement: 'ThrowStatement',
    TryStatement: 'TryStatement',
    UnaryExpression: 'UnaryExpression',
    UpdateExpression: 'UpdateExpression',
    VariableDeclaration: 'VariableDeclaration',
    VariableDeclarator: 'VariableDeclarator',
    WhileStatement: 'WhileStatement',
    WithStatement: 'WithStatement',
    YieldExpression: 'YieldExpression'
//!oj: start changes
    ,
    OJMessageExpression: 'OJMessageExpression',
    OJMessageReceiver: 'OJMessageReceiver',
    OJMessageSelector: 'OJMessageSelector',
    OJMethodNameSegment: 'OJMethodNameSegment',
    OJClassImplementation: 'OJClassImplementation',
    OJMethodDefinition: 'OJMethodDefinition',
    OJMethodSelector: 'OJMethodSelector',
    OJSelector: 'OJSelector',
    OJParameterType: 'OJParameterType',
    OJInstanceVariableDeclarations: 'OJInstanceVariableDeclarations',
    OJInstanceVariableDeclaration: 'OJInstanceVariableDeclaration',
    OJPropertyDirective: 'OJPropertyDirective',
    OJPropertyAttribute: 'OJPropertyAttribute',
    OJSynthesizeDirective: 'OJSynthesizeDirective',
    OJForwardDirective: 'OJForwardDirective',
    OJSqueezeDirective: 'OJSqueezeDirective',
    OJSynthesizePair: 'OJSynthesizePair',
    OJDynamicDirective: 'OJDynamicDirective',
    OJSelectorDirective: 'OJSelectorDirective',
    OJConstDeclaration: 'OJConstDeclaration',
    OJEnumDeclaration: 'OJEnumDeclaration',
    OJStructDefinition: 'OJStructDefinition',
    OJProtocolDefinition: 'OJProtocolDefinition',
    OJProtocolList: 'OJProtocolList',
    OJMethodDeclaration: 'OJMethodDeclaration',
    OJAnyExpression: 'OJAnyExpression',
    OJCastExpression: 'OJCastExpression',
    OJTypeAnnotation: 'OJTypeAnnotation',
    OJEachStatement: 'OJEachStatement',
    OJGlobalDeclaration: 'OJGlobalDeclaration',
    OJBridgedDeclaration: 'OJBridgedDeclaration',
    OJTypeDefinition: 'OJTypeDefinition',
    OJObserveDirective: 'OJObserveDirective',
    OJObserveAttribute:  'OJObserveAttribute'
//!oj: end changes
};
